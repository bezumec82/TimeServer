Configuration must be done in file 'LaOSconfig.h'. 
All explanations look inside.

The base usage pattern is demonstrated in file 'main.cpp'.
The idea is simple - show your thread functions to
the core and it will cycle it for you.
Don't forget to call 'Yeild', when the job is done.

At the present moment solemn usage of OS 
is to link it in your eclipse-based project.
Just drug folder LaOS inside your project 
and add 'LaOS/Inc' in 'Includes' :
Properties -> C/C++ General -> Path and Symbols -> Includes

To successfully compile your project, folder 'LaOS/support' 
should be removed from sources. Add a filter:
Properties -> C/C++ General -> Path and Symbols -> Source Location

Inside folder '/support' provided fixed linker script
and '..start.s' files. The main idea, behind them, is to keep code in FLASH,
and execute it from SRAM. Such an arrangement makes it possible, 
for example, to organize the hot re-flash of MCU.
In the present moment, only STM32H575 is supported.

Core of OS is realized as signleton pattern,
as far as you include it in your project - you have it.

If you use STMCubeMX disable code generation for 
 - MemManage_Handler
 - SVC_Handler
 - SysTick_Handler

STM32 HAL uses global structures to access peripheral - 
to make these structures accessible to un-privileged threads
add macro 'REMOVE_PROTECTION' before their definition.

File 'sysmem.c' must be removed from build. File 'sysmem.cpp' its substitute.
Heap allocation is made from special separated region - 
look provided linker script.

To move vector table into AXI_SRAM(0x24000000), uncomment line :
'#define VECT_TAB_SRAM' in file 'system_stm32h7xx_dualcore_boot_cm4_cm7.c'.
This definition is used in 'void SystemInit (void)'. 
'.text' section is copied into the same SRAM in the system sturtup code.

Each MCU provider has its own watchdog implementation. 
I used STM's WWDG in the core, you can remove it completely, 
or apply your own solution. Look for implementation :
'::LaOS::Core::Start' and '::LaOS::Core::Supervisor'

#########
### Notes
#########
For H7 series, you can't remove stack to AXI_SRAM (0x24000000 - 0x2407FFFF),
it will work only in debug mode. Un-explainable - text section works fine.

Different crutches for STM's HAL will be added to the 'stm32_hal_crutch.cpp'.

Watchdog must be configured before MPU - unexplainable. 
In other case watchdog doesn't run.

'ldrex/strex' instructions work only if data in DTCM.

